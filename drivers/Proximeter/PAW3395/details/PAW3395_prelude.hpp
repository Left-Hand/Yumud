
#pragma once

#include "core/io/regs.hpp"
#include "core/utils/Result.hpp"
#include "core/utils/Errno.hpp"

#include "hal/bus/spi/spidrv.hpp"
#include "types/vectors/Vector2.hpp"

namespace ymd::drivers{


struct PAW3395_Prelude{
    /* PAW3395 Product ID value */
    static constexpr  uint8_t PAW3395_PRODUCT_ID = 0x51; /* Verify this value with datasheet */

    enum class Error_Kind:uint8_t{
        InitError
    };

    DEF_ERROR_SUMWITH_HALERROR(Error, Error_Kind)

    template<typename T = void>
    using IResult = Result<T, Error>;

    static constexpr uint8_t PAW3395_REG_PRODUCT_ID = 0x00;   // 产品ID，RO，Default：0x51
    static constexpr uint8_t PAW3395_REG_REVISION_ID = 0x01;   // 修订版本ID，RO，Default：0x00
    static constexpr uint8_t PAW3395_REG_MOTION = 0x02;   // 运动状态，R/W，Default：0x00
    static constexpr uint8_t PAW3395_REG_DELTA_X_L = 0x03;   // X轴低位增量，RO，Default：0x00
    static constexpr uint8_t PAW3395_REG_DELTA_X_H = 0x04;   // X轴高位增量，RO，Default：0x00
    static constexpr uint8_t PAW3395_REG_DELTA_Y_L = 0x05;   // Y轴低位增量，RO，Default：0x00
    static constexpr uint8_t PAW3395_REG_DELTA_Y_H = 0x06;   // Y轴高位增量，RO，Default：0x00
    static constexpr uint8_t PAW3395_REG_SQUAL = 0x07;   // 表面质量指标，RO，Default：0x00
    static constexpr uint8_t PAW3395_REG_RAWDATA_SUM = 0x08;   // 原始数据和，RO，Default：0x00
    static constexpr uint8_t PAW3395_REG_MAXIMUM_RAWDATA = 0x09;   // 最大原始数据，RO，Default：0x00
    static constexpr uint8_t PAW3395_REG_MINIMUM_RAWDATA = 0x0A;   // 最小原始数据，RO，Default：0x00
    static constexpr uint8_t PAW3395_REG_SHUTTER_LOWER = 0x0B;   // 快门下限，RO，Default：0x00
    static constexpr uint8_t PAW3395_REG_SHUTTER_UPPER = 0x0C;   // 快门上限，RO，Default：0x01
    static constexpr uint8_t PAW3395_REG_OBSERVATION = 0x15;   // 观测值，R/W，Default：0x80
    static constexpr uint8_t PAW3395_REG_MOTION_BURST = 0x16;   // 运动突发，R/W，Default：0x00
    static constexpr uint8_t PAW3395_REG_POWER_UP_RESET = 0x3A;   // 上电复位，WO，No default
    static constexpr uint8_t PAW3395_REG_SHUTDOWN = 0x3B;   // 关闭，WO，No default
    static constexpr uint8_t PAW3395_REG_PERFORMANCE = 0x40;   // 性能配置，R/W，Default：0x00
    static constexpr uint8_t PAW3395_REG_SET_RESOLUTION = 0x47;   // 设置分辨率(更新CPI)，WO，Default：0x00
    static constexpr uint8_t PAW3395_REG_RESOLUTION_X_LOW = 0x48;   // X轴低分辨率，R/W，Default：0x63
    static constexpr uint8_t PAW3395_REG_RESOLUTION_X_HIGH = 0x49;   // X轴高分辨率，R/W，Default：0x00
    static constexpr uint8_t PAW3395_REG_RESOLUTION_Y_LOW = 0x4A;   // Y轴低分辨率，R/W，Default：0x63
    static constexpr uint8_t PAW3395_REG_RESOLUTION_Y_HIGH = 0x4B;   // Y轴高分辨率，R/W，Default：0x00
    static constexpr uint8_t PAW3395_REG_ANGLE_SNAP = 0x56;   // 角度捕捉，R/W，Default：0x0D
    static constexpr uint8_t PAW3395_REG_RAWDATA_OUTPUT = 0x58;   // 原始数据输出，RO，Default：0x00
    static constexpr uint8_t PAW3395_REG_RAWDATA_STATUS = 0x59;   // 原始数据状态，RO，Default：0x00
    static constexpr uint8_t PAW3395_REG_RIPPLE_CONTROL = 0x5A;   // 纹波控制，R/W，Default：0x00
    static constexpr uint8_t PAW3395_REG_AXIS_CONTROL = 0x5B;   // 坐标系翻转，R/W，Default：0x60
    static constexpr uint8_t PAW3395_REG_MOTION_CTRL = 0x5C;   // 运动控制，R/W，Default：0x02
    static constexpr uint8_t PAW3395_REG_INV_PRODUCT_ID = 0x5F;   // 反向产品ID，RO，Default：0xAE
    static constexpr uint8_t PAW3395_REG_RUN_DOWNSHIFT = 0x77;   // 运行下移，R/W，Default：0x14
    static constexpr uint8_t PAW3395_REG_REST1_PERIOD = 0x78;   // 休息1周期，R/W，Default：0x01
    static constexpr uint8_t PAW3395_REG_REST1_DOWNSHIFT = 0x79;   // 休息1下移，R/W，Default：0x90
    static constexpr uint8_t PAW3395_REG_REST2_PERIOD = 0x7A;   // 休息2周期，R/W，Default：0x19
    static constexpr uint8_t PAW3395_REG_REST2_DOWNSHIFT = 0x7B;   // 休息2下移，R/W，Default：0x5E
    static constexpr uint8_t PAW3395_REG_REST3_PERIOD = 0x7C;   // 休息3周期，R/W，Default：0x3F
    static constexpr uint8_t PAW3395_REG_RUN_DOWNSHIFT_MULT = 0x7D;   // 运行下移倍数，R/W，Default：0x07
    static constexpr uint8_t PAW3395_REG_REST_DOWNSHIFT_MULT = 0x7E;   // 休息下移倍数，R/W，Default：0x55
    static constexpr uint16_t PAW3395_REG_ANGLE_TUNE1 = 0x0577; // 角度调整1，R/W，Default：0x00
    static constexpr uint16_t PAW3395_REG_ANGLE_TUNE2 = 0x0578; // 角度调整2使能，R/W，Default：0x00
    static constexpr uint16_t PAW3395_REG_LIFT_CONFIG = 0x0C4E; // 抬起配置，R/W，Default：0x08
    
    static constexpr auto INIT_GAME_TABLE = std::to_array<std::pair<uint8_t, uint8_t>>({
        	// 1. 将值0x05写入寄存器0x7F
            {0x7F, 0x05},
            // 2. 将值0x40写入寄存器0x51
            {0x51, 0x40}, // 0x51 未定义
            // 3. 将值0x40写入寄存器0x53
            {0x53, 0x40}, // 0x53 未定义
            // 4. 将值0x31写入寄存器0x61
            {0x61, 0x31}, // 0x61 未定义
            // 5. 将值0x0F写入寄存器0x6E
            {0x6E, 0x0F}, // 0x6E 未定义
            // 6. 将值0x07写入寄存器0x7F
            {0x7F, 0x07},
            // 7. 将值0x32写入寄存器0x42
            {0x42, 0x2F}, // 0x42 未定义
            // 8. 将值0x00写入寄存器0x43
            {0x43, 0x00}, // 0x43 未定义
            // 9. 将值0x0D写入寄存器0x7F
            {0x7F, 0x0D},
            // 10. 将值0x12写入寄存器0x51
            {0x51, 0x12}, // 0x51 未定义
            // 11. 将值0x49写入寄存器0x52
            {0x52, 0xDB}, // 0x52 未定义
            // 12. 将值0x12写入寄存器0x53
            {0x53, 0x12}, // 0x53 未定义
            // 13. 将值0x5B写入寄存器0x54
            {0x54, 0xDC}, // 0x54 未定义
            // 14. 将值0x12写入寄存器0x55
            {0x55, 0x12}, // 0x55 未定义
            // 15. 将值0xEA写入寄存器0x56
            {0x56, 0xEA}, // 0x56 未定义
            // 16. 将值0x15写入寄存器0x57
            {0x57, 0x15}, // 0x57 未定义
            // 17. 将值0x2D写入寄存器0x58
            {0x58, 0x2D}, // 0x58 未定义
            // 18. 将值0x00写入寄存器0x7F
            {0x7F, 0x00},
            // 19. 将值0x55写入寄存器0x54
            {0x54, 0x55}, // 0x54 未定义
            // 20. 将值0x83写入寄存器0x40
            {0x40, 0x83},
    });

    static constexpr auto INIT_TABLE_1 = std::to_array<std::pair<uint8_t, uint8_t>>({
            // 1. 将值0x07写入寄存器0x7F (Bank Select or similar?)
            {0x7F, 0x0},
            // 2. 将值0x41写入寄存器0x40 (PAW3395_REG_PERFORMANCE)
            {PAW3395_REG_PERFORMANCE, 0x4},
            // 3. 将值0x00写入寄存器0x7F
            {0x7F, 0x0},
            // 4. 将值0x80写入寄存器0x40 (PAW3395_REG_PERFORMANCE)
            {PAW3395_REG_PERFORMANCE, 0x8},
            {0x7F, 0x0},
            // 6. 将值0x0D写入寄存器0x55
            {0x55, 0x0D}, // 0x55 未义
            // 7. 将值0x1B写入寄存器0x56 (PAW3395_REG_ANGLE_SNAP)
            {PAW3395_REG_ANGLE_SNAP, 0x1},
            // 8. 将值0xE8写入寄存器0x57
            {0x57, 0xE8}, // 0x57 未义
            // 9. 将值0xD5写入寄存器0x58 (PAW3395_REG_RAWDATA_OUTPUT - 注意: 定义为 RO)
            {PAW3395_REG_RAWDATA_OUTPUT, 0xD},
            // 10. 将值0x14写入寄存器0x7F
            {0x7F, 0x1},
            // 11. 将值0xBC写入寄存器0x42
            {0x42, 0xBC}, // 0x42 未义
            // 12. 将值0x74写入寄存器0x43
            {0x43, 0x74}, // 0x43 未义
            // 13. 将值0x20写入寄存器0x4B (PAW3395_REG_RESOLUTION_Y_HIGH)
            {PAW3395_REG_RESOLUTION_Y_HIGH, 0x2},
            // 14. 将值0x00写入寄存器0x4D
            {0x4D, 0x00}, // 0x4D 未义
            // 15. 将值0x0E写入寄存器0x53
            {0x53, 0x0E}, // 0x53 未义
            // 16. 将值0x05写入寄存器0x7F
            {0x7F, 0x0},
            // 17. 将值0x04写入寄存器0x44
            {0x44, 0x04}, // 0x44 未义
            // 18. 将值0x06写入寄存器0x4D
            {0x4D, 0x06}, // 0x4D 未义
            // 19. 将值0x40写入寄存器0x51
            {0x51, 0x40}, // 0x51 未义
            // 20. 将值0x40写入寄存器0x53
            {0x53, 0x40}, // 0x53 未义
            // 21. 将值0xCA写入寄存器0x55
            {0x55, 0xCA}, // 0x55 未义
            // 22. 将值0xE8写入寄存器0x5A (PAW3395_REG_RIPPLE_CONTROL)
            {PAW3395_REG_RIPPLE_CONTROL, 0xE},
            // 23. 将值0xEA写入寄存器0x5B (PAW3395_REG_AXIS_CONTROL) - 注意: 原文是 OxEA，应为 0xEA
            {PAW3395_REG_AXIS_CONTROL, 0xE},
            // 24. 将值0x31写入寄存器0x61
            {0x61, 0x31}, // 0x61 未义
            // 25. 将值0x64写入寄存器0x62
            {0x62, 0x64}, // 0x62 未义
            // 26. 将值0xB8写入寄存器0x6D - 注意: 原文是 Ox6D，应为 0x6D
            {0x6D, 0xB8}, // 0x6D 未义
            // 27. 将值0x0F写入寄存器0x6E
            {0x6E, 0x0F}, // 0x6E 未义
            // 28. 将值0x02写入寄存器0x70
            {0x70, 0x02}, // 0x70 未义
            // 29. 将值0x2A写入寄存器0x4A
            {0x4A, 0x2A}, // 0x4A 未义
            // 30. 将值0x26写入寄存器0x60
            {0x60, 0x26}, // 0x60 未义
            // 31. 将值0x06写入寄存器0x7F
            {0x7F, 0x0},
            // 32. 将值0x70写入寄存器0x6D
            {0x6D, 0x70}, // 0x6D 未义
            // 33. 将值0x60写入寄存器0x6E
            {0x6E, 0x60}, // 0x6E 未义
            // 34. 将值0x04写入寄存器0x6F
            {0x6F, 0x04}, // 0x6F 未义
            // 35. 将值0x02写入寄存器0x53
            {0x53, 0x02}, // 0x53 未义
            // 36. 将值0x11写入寄存器0x55
            {0x55, 0x11}, // 0x55 未义
            // 37. 将值0x01写入寄存器0x7A
            {0x7A, 0x01}, // 0x7A 未义
            // 38. 将值0x51写入寄存器0x7D
            {0x7D, 0x51}, // 0x7D 未义
            // 39. 将值0x07写入寄存器0x7F
            {0x7F, 0x0},
            // 40. 将值0x10写入寄存器0x41
            {0x41, 0x10}, // 0x41 未义
            // 41. 将值0x32写入寄存器0x42
            {0x42, 0x32}, // 0x42 未义
            // 42. 将值0x00写入寄存器0x43
            {0x43, 0x00}, // 0x43 未义
            // 43. 将值0x08写入寄存器0x7F
            {0x7F, 0x0},
            // 44. 将值0x4F写入寄存器0x71
            {0x71, 0x4F}, // 0x71 未义
            // 45. 将值0x09写入寄存器0x7F
            {0x7F, 0x0},
            // 46. 将值0x1F写入寄存器0x62
            {0x62, 0x1F}, // 0x62 未义
            // 47. 将值0x1F写入寄存器0x63
            {0x63, 0x1F}, // 0x63 未义
            // 48. 将值0x03写入寄存器0x65
            {0x65, 0x03}, // 0x65 未义
            // 49. 将值0x03写入寄存器0x66
            {0x66, 0x03}, // 0x66 未义
            // 50. 将值0x1F写入寄存器0x67
            {0x67, 0x1F}, // 0x67 未义
            // 51. 将值0x1F写入寄存器0x68
            {0x68, 0x1F}, // 0x68 未义
            // 52. 将值0x03写入寄存器0x69
            {0x69, 0x03}, // 0x69 未义
            // 53. 将值0x03写入寄存器0x6A
            {0x6A, 0x03}, // 0x6A 未义
            // 54. 将值0x1F写入寄存器0x6C
            {0x6C, 0x1F}, // 0x6C 未义
            // 55. 将值0x1F写入寄存器0x6D
            {0x6D, 0x1F}, // 0x6D 未义
            // 56. 将值0x04写入寄存器0x51
            {0x51, 0x04}, // 0x51 未义
            // 57. 将值0x20写入寄存器0x53
            {0x53, 0x20}, // 0x53 未义
            // 58. 将值0x20写入寄存器0x54
            {0x54, 0x20}, // 0x54 未义
            // 59. 将值0x0C写入寄存器0x71
            {0x71, 0x0C}, // 0x71 未义
            // 60. 将值0x07写入寄存器0x72
            {0x72, 0x07}, // 0x72 未义
            // 61. 将值0x07写入寄存器0x73
            {0x73, 0x07}, // 0x73 未义
            // 62. 将值0x0A写入寄存器0x7F
            {0x7F, 0x0},
            // 63. 将值0x14写入寄存器0x4A
            {0x4A, 0x14}, // 0x4A 未义
            // 64. 将值0x14写入寄存器0x4C
            {0x4C, 0x14}, // 0x4C 未义
            // 65. 将值0x19写入寄存器0x55
            {0x55, 0x19}, // 0x55 未义
            // 66. 将值0x14写入寄存器0x7F
            {0x7F, 0x1},
            // 67. 将值0x30写入寄存器0x4B
            {0x4B, 0x30}, // 0x4B 未义
            // 68. 将值0x03写入寄存器0x4C
            {0x4C, 0x03}, // 0x4C 未义
            // 69. 将值0x0B写入寄存器0x61
            {0x61, 0x0B}, // 0x61 未义
            // 70. 将值0x0A写入寄存器0x62
            {0x62, 0x0A}, // 0x62 未义
            // 71. 将值0x02写入寄存器0x63
            {0x63, 0x02}, // 0x63 未义
            // 72. 将值0x15写入寄存器0x7F
            {0x7F, 0x1},
            // 73. 将值0x02写入寄存器0x4C
            {0x4C, 0x02}, // 0x4C 未义
            // 74. 将值0x02写入寄存器0x56
            {0x56, 0x02}, // 0x56 未义
            // 75. 将值0x91写入寄存器0x41
            {0x41, 0x91}, // 0x41 未义
            // 76. 将值0x0A写入寄存器0x4D
            {0x4D, 0x0A}, // 0x4D 未义
            // 77. 将值0x0C写入寄存器0x7F
            {0x7F, 0x0},
            // 78. 将值0x10写入寄存器0x4A
            {0x4A, 0x10}, // 0x4A 未义
            // 79. 将值0x0C写入寄存器0x4B
            {0x4B, 0x0C}, // 0x4B 未义
            // 80. 将值0x40写入寄存器0x4C
            {0x4C, 0x40}, // 0x4C 未义
            // 81. 将值0x25写入寄存器0x41
            {0x41, 0x25}, // 0x41 未义
            // 82. 将值0x18写入寄存器0x55
            {0x55, 0x18}, // 0x55 未义
            // 83. 将值0x14写入寄存器0x56
            {0x56, 0x14}, // 0x56 未义
            // 84. 将值0x0A写入寄存器0x49
            {0x49, 0x0A}, // 0x49 未义
            // 85. 将值0x00写入寄存器0x42
            {0x42, 0x00}, // 0x42 未义
            // 86. 将值0x2D写入寄存器0x43
            {0x43, 0x2D}, // 0x43 未义
            // 87. 将值0x0C写入寄存器0x44
            {0x44, 0x0C}, // 0x44 未义
            // 88. 将值0x1A写入寄存器0x54
            {0x54, 0x1A}, // 0x54 未义
            // 89. 将值0x0D写入寄存器0x5A
            {0x5A, 0x0D}, // 0x5A 未义
            // 90. 将值0x1E写入寄存器0x5F
            {0x5F, 0x1E}, // 0x5F 未义
            // 91. 将值0x05写入寄存器0x5B
            {0x5B, 0x05}, // 0x5B 未义
            // 92. 将值0x0F写入寄存器0x5E
            {0x5E, 0x0F}, // 0x5E 未义
            // 93. 将值0x0D写入寄存器0x7F
            {0x7F, 0x0},
            // 94. 将值0xDD写入寄存器0x48
            {0x48, 0xDD}, // 0x48 未义
            // 95. 将值0x03写入寄存器0x4F
            {0x4F, 0x03}, // 0x4F 未义
            // 96. 将值0x49写入寄存器0x52
            {0x52, 0x49}, // 0x52 未义
            // 97. 将值0x00写入寄存器0x51
            {0x51, 0x00}, // 0x51 未义
            // 98. 将值0x5B写入寄存器0x54
            {0x54, 0x5B}, // 0x54 未义
            // 99. 将值0x00写入寄存器0x53
            {0x53, 0x00}, // 0x53 未义
            // 100. 将值0x64写入寄存器0x56
            {0x56, 0x64}, // 0x56 未义
            // 101. 将值0x00写入寄存器0x55
            {0x55, 0x00}, // 0x55 未义
            // 102. 将值0xA5写入寄存器0x58
            {0x58, 0xA5}, // 0x58 未义
            // 103. 将值0x02写入寄存器0x57
            {0x57, 0x02}, // 0x57 未义
            // 104. 将值0x29写入寄存器0x5A
            {0x5A, 0x29}, // 0x5A 未义
            // 105. 将值0x47写入寄存器0x5B
            {0x5B, 0x47}, // 0x5B 未义
            // 106. 将值0x81写入寄存器0x5C
            {0x5C, 0x81}, // 0x5C 未义
            // 107. 将值0x40写入寄存器0x5D
            {0x5D, 0x40}, // 0x5D 未义
            // 108. 将值0xDC写入寄存器0x71
            {0x71, 0xDC}, // 0x71 未义
            // 109. 将值0x07写入寄存器0x70
            {0x70, 0x07}, // 0x70 未义
            // 110. 将值0x00写入寄存器0x73
            {0x73, 0x00}, // 0x73 未义
            // 111. 将值0x08写入寄存器0x72
            {0x72, 0x08}, // 0x72 未义
            // 112. 将值0xDC写入寄存器0x75
            {0x75, 0xDC}, // 0x75 未义
            // 113. 将值0x07写入寄存器0x74
            {0x74, 0x07}, // 0x74 未义
            // 114. 将值0x00写入寄存器0x77
            {0x77, 0x00}, // 0x77 未义
            // 115. 将值0x08写入寄存器0x76
            {0x76, 0x08}, // 0x76 未义
            // 116. 将值0x10写入寄存器0x7F
            {0x7F, 0x1},
            // 117. 将值0xD0写入寄存器0x4C
            {0x4C, 0xD0}, // 0x4C 未义
            // 118. 将值0x00写入寄存器0x7F
            {0x7F, 0x0},
            // 119. 将值0x63写入寄存器0x4F
            {0x4F, 0x63}, // 0x4F 未义
            // 120. 将值0x00写入寄存器0x4E
            {0x4E, 0x00}, // 0x4E 未义
            // 121. 将值0x63写入寄存器0x52
            {0x52, 0x63}, // 0x52 未义
            // 122. 将值0x00写入寄存器0x51
            {0x51, 0x00}, // 0x51 未义
            // 123. 将值0x54写入寄存器0x54
            {0x54, 0x54}, // 0x54 未义
            // 124. 将值0x10写入寄存器0x5A
            {0x5A, 0x10}, // 0x5A 未义
            // 125. 将值0x4F写入寄存器0x77
            {0x77, 0x4F}, // 0x77 未义
            // 126. 将值0x01写入寄存器0x47
            {0x47, 0x01}, // 0x47 未义
            // 127. 将值0x40写入寄存器0x5B
            {0x5B, 0x40}, // 0x5B 未义
            // 128. 将值0x60写入寄存器0x64
            {0x64, 0x60}, // 0x64 未义
            // 129. 将值0x06写入寄存器0x65
            {0x65, 0x06}, // 0x65 未义
            // 130. 将值0x13写入寄存器0x66
            {0x66, 0x13}, // 0x66 未义
            // 131. 将值0x0F写入寄存器0x67
            {0x67, 0x0F}, // 0x67 未义
            // 132. 将值0x01写入寄存器0x78
            {0x78, 0x01}, // 0x78 未义
            // 133. 将值0x9C写入寄存器0x79
            {0x79, 0x9C}, // 0x79 未义
            // 134. 将值0x00写入寄存器0x40
            {0x40, 0x00}, // 0x40 未义
            // 135. 将值0x02写入寄存器0x55
            {0x55, 0x02}, // 0x55 未义
            // 136. 将值0x70写入寄存器0x23
            {0x23, 0x70}, // 0x23 未义
            // 137. 将值0x01写入寄存器0x22
            {0x22, 0x01} // 0x22 未义
    });



};
struct PAW3395_Regs:public PAW3395_Prelude{

};
}