#this is a reg map definition for CH32
# uint16_t (\w+):(\d+);

[config]
headers = ["<cstdint>", "core/io/regs.hpp"]
file_name = "ch32_common_spi.hpp"
namespace_name = "CH32V20x::SPI"
frontend_type = 1.0
backend_type = 1.0

[CTRL1.CPHA]
bits = 0
docu = '''
    时钟相位设置位,在通讯时不可以修改此位.
    1:数据采样从第二个时钟沿开始;
    0:数据采样从第一个时钟沿开始.
    '''

[CTRL1.CPOL]
bits = 1
docu = '''
    时钟极性选择位,在通讯时不可以修改此位.
    1:空闲状态时,SCK 保持高电平;
    0:空闲状态时,SCK 保持低电平.
    '''

[CTRL1.MSTR]
bits = 2
docu = '''
    主从设置位,在通讯时不可以修改此位.
    1:配置为主设备;
    0:配置为从设备.
    '''

[CTRL1.BR]
bits = 3.5
enum = "SpiPrescale"
docu = '''
    波特率设置域,在通讯时不可以修改此域.
    000:FPCLK/2; 001:FPCLK/4;
    010:FPCLK/8; 011:FPCLK/16;
    100:FPCLK/32; 101:FPCLK/64;
    110:FPCLK/128; 111:FPCLK/256.
    '''

[CTRL1.SPE]
bits = 6

[CTRL1.LSB]
bits = 7

[CTRL1.SSI]
bits = 8

[CTRL1.SSM]
bits = 9

[CTRL1.RXONLY]
bits = 10

[CTRL1.DFF]
bits = 11

[CTRL1.CRCNEXT]
bits = 12

[CTRL1.CRCEN]
bits = 13
docu = '''
    硬件 CRC 校验使能位,该位只能在 SPE 为 0 时
    写入,该位只能在全双工模式下使用.
    1: 启动 CRC 计算;
    0: 禁止 CRC 计算.
'''

[CTRL1.BIDIOE]
bits = 14
docu = '''
    单线输出使能位,和 BIDIMODE 配合使用.
    1:使能输出,仅发送;
    0:禁止输出,仅接收.
'''

[CTRL1.BIDIMODE]
bits = 15
docu = '''
    单线数据模式使能位.
    1:选择单线双向模式;
    0:选择双线双向模式
'''